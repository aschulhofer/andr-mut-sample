evaluationDependsOn(':app')

apply plugin: "com.android.application"
apply plugin: "at.woodstick.pimutdroid"

pimut {
    pitest {

//        Note, the functionality provided by pitest-export plugin is now built into pitest as of release 1.3.0
//         pitestVersion = "1.2.2"

        mainSourceSets = [project(":app").android.sourceSets.main]

        // Not supported in pit gradle plugin android fork
//    testSourceSets = [project(":app").android.sourceSets.test]

        // Not needed when project.group property is set
//        targetClasses = ["at.woodstick.mysampleapplication.*"]
//        targetClasses = [
////            "at.woodstick.mysampleapplication.GSampleActivity",
////            "at.woodstick.mysampleapplication.MainActivity",
//
//            "at.woodstick.mysampleapplication.*",
//        ]

        targetTests = ["at.woodstick.mysampleapplication.*"]

        mutators = [
            "INCREMENTS",
            "VOID_METHOD_CALLS",
            "RETURN_VALS",
            "MATH",
            "NEGATE_CONDITIONALS",
            "INVERT_NEGS",
            "CONDITIONALS_BOUNDARY",
            "REMOVE_CONDITIONALS"
        ]

        exportLineCoverage = true

        outputFormats = ["XML", "HTML"]

        threads = 4

        verbose = true

        reportDir = "${project.reporting.baseDir.path}/pitest/custom"

        maxMutationsPerClass = 0
    }

    buildConfiguration {
        env1 {
            targetMutants = ["at.woodstick.mysampleapplication.MainActivity"]
        }

        env2 {
            targetMutants = ["at.woodstick.mysampleapplication.GSampleActivity"]
        }

        env3 {
            targetMutants = ["at.woodstick.mysampleapplication.DisplayMessageActivity"]
        }

        env4 {
            targetMutants = ["at.woodstick.mysampleapplication.util.*"]
        }

        env5 {
            targetMutants = []
        }

        env6 {

        }
    }

    instrumentationTestOptions {
        targetTests {
//            packages = [
//                "at.woodstick.mysampleapplication.espresso",
//            ]
            classes = [
                "at.woodstick.mysampleapplication.espresso.MainActivityTest",
//                "at.woodstick.mysampleapplication.espresso.DisplayMessageActivityTest",
            ]
        }

        targetMutants = [
//            "at.woodstick.mysampleapplication.GSampleActivity",
//            "at.woodstick.mysampleapplication.MainActivity",

            "at.woodstick.mysampleapplication.MainActivity",
//            "at.woodstick.mysampleapplication.*",
//            "at.woodstick.mysampleapplication.util.*",
        ]
    }

//    packageDir = project(":app").android.defaultConfig.applicationId.replaceAll("\\.", "/")
//    mutantsDir = "${pitest.reportDir}/debug/$packageDir"
//    outputDir = "${project.buildDir}/mutres"
}

//def mutantEnv = project.hasProperty("mprofile") ? project.getProperty("mprofile") : "default"
//
//println project.getProperty("mprofile")
//println mutantEnv
//
//apply from: "${mutantEnv}-build.gradle"

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId project(":app").android.defaultConfig.applicationId
//        testApplicationId project(":app").android.defaultConfig.testApplicationId
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    sourceSets {
        main {
            res.srcDirs("../app/src/main/res")
            java.srcDirs("../app/src/main/java")
            manifest.srcFile("../app/src/main/AndroidManifest.xml")
        }

        test {
            java.srcDirs("../app/src/test/java")
        }

        androidTest {
            setRoot("../app/src/androidTest")
        }
    }

//    testOptions {
//        reportDir  "${project.reporting.baseDir.path}/test-reports"
//        resultsDir "${project.reporting.baseDir.path}/test-results"
//    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "com.android.support:appcompat-v7:$supportLibVersion"
    implementation "com.android.support.constraint:constraint-layout:1.0.2"

    androidTestImplementation "com.android.support:support-annotations:$supportLibVersion"
    androidTestImplementation "com.android.support.test:rules:$supportTestVersion"
    androidTestImplementation "com.android.support.test:runner:$supportTestVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-contrib:$espressoVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-intents:$espressoVersion"

    testImplementation "junit:junit:4.12"

    // newest mockito2 is 2.7.19
    testImplementation "org.mockito:mockito-core:1.10.19"

    // for robolectric and sdk version not 21 or 22
    // java.lang.NoClassDefFoundError: javax/microedition/khronos/opengles/GL
    testImplementation 'org.khronos:opengl-api:gl1.1-android-2.1_r1'

    testImplementation "org.robolectric:robolectric:$robolectricVersion"
}

//import at.woodstick.pimutdroid.task.AfterMutationTask
//task customAfterMutation(type: AfterMutationTask) {
//    outputDir = "${project.buildDir}/mutres"
//
//    doLast {
//        println "My after mutation task"
//    }
//}